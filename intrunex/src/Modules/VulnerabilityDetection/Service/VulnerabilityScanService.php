<?php

namespace App\Modules\VulnerabilityDetection\Service;

use App\Modules\AssetDiscovery\Entity\Asset;
use App\Modules\ScanManagement\Entity\ScanJob;
use App\Modules\VulnerabilityDetection\Message\NiktoScanMessage;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\Messenger\MessageBusInterface;

class VulnerabilityScanService
{
    private EntityManagerInterface $em;
    private MessageBusInterface $bus;

    public function __construct(EntityManagerInterface $em, MessageBusInterface $bus)
    {
        $this->em = $em;
        $this->bus = $bus;
    }

    public function scanAsset(Asset $asset): ScanJob
    {
        // 1. Create a ScanJob to track the scan
        $scanJob = new ScanJob();
        $scanJob->setAsset($asset);
        $scanJob->setScanner('nikto');
        $scanJob->setStatus('pending');
        $scanJob->setStartedAt(new \DateTimeImmutable());

        $this->em->persist($scanJob);
        $this->em->flush();

        // 2. Dispatch a message to the background worker to perform the scan
        $this->bus->dispatch(new NiktoScanMessage($asset->getId(), $scanJob->getId()));

        // 3. Return the ScanJob so the controller can redirect to the progress page
        return $scanJob;
    }
}