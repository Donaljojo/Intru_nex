<?php

namespace App\Modules\VulnerabilityDetection\Service;

use App\Modules\ScanManagement\Entity\ScanJob;
use Doctrine\ORM\EntityManagerInterface;
use Psr\Log\LoggerInterface;

class NiktoScanService
{
    private EntityManagerInterface $em;
    private LoggerInterface $logger;

    public function __construct(EntityManagerInterface $em, LoggerInterface $logger)
    {
        $this->em = $em;
        $this->logger = $logger;
    }

    public function scan(int $scanJobId): void
    {
        $scanJob = $this->em->getRepository(ScanJob::class)->find($scanJobId);

        if (!$scanJob) {
            $this->logger->error('ScanJob not found for ID: ' . $scanJobId);
            return;
        }

        $asset = $scanJob->getAsset();
        $target = $asset->getIpAddress() ?? $asset->getName();

        $this->logger->info(sprintf('Starting Nikto scan for asset %s (target: %s)', $asset->getId(), $target));
        $scanJob->setStatus('running');
        $this->em->flush();

        // TODO: Implement actual Nikto process execution here.
        // For now, we'll simulate a scan that takes some time.
        sleep(15); // Simulate a scan running for 15 seconds

        $scanJob->setStatus('completed');
        $scanJob->setFinishedAt(new \DateTimeImmutable());
        $this->em->flush();
        $this->logger->info(sprintf('Finished Nikto scan for asset %s', $asset->getId()));
    }
}